// Copyright Â© 2024 Meroxa, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package internal

import (
	"bufio"
	"fmt"
	"os"
	"path/filepath"
)

type DeletedParamGen struct {
}

func (d DeletedParamGen) Migrate(workingDir string) error {
	// Find generated files
	files, err := findGeneratedFiles(workingDir)
	if err != nil {
		return fmt.Errorf("finding generated files: %w", err)
	}

	// Print found files
	for _, file := range files {
		err := os.Remove(file)
		if err != nil {
			return fmt.Errorf("removing file %s: %w", file, err)
		}
	}

	return nil
}

func findGeneratedFiles(rootDir string) ([]string, error) {
	var generatedFiles []string

	// Walk through the directory recursively
	err := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {
		// Check if there was an error accessing the path
		if err != nil {
			return err
		}

		// Skip directories
		if info.IsDir() {
			return nil
		}

		// Open the file
		file, err := os.Open(path)
		if err != nil {
			return err
		}
		defer file.Close()

		// Read the first line
		scanner := bufio.NewScanner(file)
		if scanner.Scan() {
			firstLine := scanner.Text()

			// Check if the first line matches the generated code marker
			if firstLine == "// Code generated by paramgen. DO NOT EDIT." {
				generatedFiles = append(generatedFiles, path)
			}
		}

		// Check for scanning errors
		if err := scanner.Err(); err != nil {
			return err
		}

		return nil
	})

	if err != nil {
		return nil, err
	}

	return generatedFiles, nil
}
